<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [IRControl\IRControl.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image IRControl\IRControl.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri Aug 23 16:08:54 2024
<BR><P>
<H3>Maximum Stack Usage =        276 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; system_run &rArr; Task2_uart_rs485 &rArr; IapPacketCheck &rArr; ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[18]">SPI1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f070x6.o(.text)
 <LI><a href="#[14]">TIM14_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[15]">TIM16_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[16]">TIM17_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[19]">USART1_IRQHandler</a> from stm32f0xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1a]">USART2_IRQHandler</a> from stm32f0xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1b]">USB_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f070x6.o(.text)
 <LI><a href="#[1c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[74]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[75]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[76]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[21]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[77]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[78]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrl
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_rs485
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_rs485
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_timeout_process
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[36]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[29]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f0xx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[2d]"></a>FLASH_GetStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5e]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[2b]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f0xx_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
</UL>

<P><STRONG><a name="[2c]"></a>FLASH_ProgramWord</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f0xx_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
</UL>

<P><STRONG><a name="[5c]"></a>FLASH_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[2a]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f0xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[63]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[62]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrl
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrl
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
</UL>

<P><STRONG><a name="[71]"></a>IWDG_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
</UL>

<P><STRONG><a name="[52]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysMonitor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
</UL>

<P><STRONG><a name="[6f]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
</UL>

<P><STRONG><a name="[70]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
</UL>

<P><STRONG><a name="[6e]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
</UL>

<P><STRONG><a name="[3c]"></a>MBS_CoreAnalyze</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_CoreAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
</UL>

<P><STRONG><a name="[44]"></a>MBS_CorePoll</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_CorePoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mb_crc16
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_rs485
</UL>

<P><STRONG><a name="[3d]"></a>MBS_Function01H</STRONG> (Thumb, 352 bytes, Stack size 96 bytes, modbus_hook.o(i.MBS_Function01H))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemReadCoilState
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[3e]"></a>MBS_Function03H</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function03H))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_Function03H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemReadHoldRegValue
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[3f]"></a>MBS_Function05H</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function05H))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_Function05H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteCoilState
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[40]"></a>MBS_Function06H</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function06H))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_Function06H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteHoldRegValue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[41]"></a>MBS_Function0FH</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function0FH))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_Function0FH &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteCoilsState
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[42]"></a>MBS_Function10H</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function10H))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_Function10H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteHoldRegValue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[4e]"></a>MBS_MappingCoilInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_user.o(i.MBS_MappingCoilInit))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
</UL>

<P><STRONG><a name="[4f]"></a>MBS_MappingHoldRegInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_user.o(i.MBS_MappingHoldRegInit))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
</UL>

<P><STRONG><a name="[4d]"></a>MBS_MappingInit</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, modbus_user.o(i.MBS_MappingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MBS_MappingInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingHoldRegInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingCoilInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>MBS_MemReadCoilState</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, modbus_user.o(i.MBS_MemReadCoilState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MBS_MemReadCoilState
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
</UL>

<P><STRONG><a name="[49]"></a>MBS_MemReadHoldRegValue</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, modbus_user.o(i.MBS_MemReadHoldRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MBS_MemReadHoldRegValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
</UL>

<P><STRONG><a name="[4a]"></a>MBS_MemWriteCoilState</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, modbus_user.o(i.MBS_MemWriteCoilState))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MBS_MemWriteCoilState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
</UL>

<P><STRONG><a name="[4c]"></a>MBS_MemWriteCoilsState</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, modbus_user.o(i.MBS_MemWriteCoilsState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MBS_MemWriteCoilsState
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
</UL>

<P><STRONG><a name="[4b]"></a>MBS_MemWriteHoldRegValue</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, modbus_user.o(i.MBS_MemWriteHoldRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MBS_MemWriteHoldRegValue
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
</UL>

<P><STRONG><a name="[50]"></a>MBS_PhysicalSendBuff</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, modbus_core.o(i.MBS_PhysicalSendBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>

<P><STRONG><a name="[43]"></a>MBS_PortSendAck</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_PortSendAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[48]"></a>MBS_PortSendWithCRC</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, modbus_core.o(i.MBS_PortSendWithCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mb_crc16
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PhysicalSendBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>

<P><STRONG><a name="[67]"></a>MbsFlashDataSyn</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, bsp_driver.o(i.MbsFlashDataSyn))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[61]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[6c]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[6b]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, system_stm32f0xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>USART1_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART2_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UartBleSendData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_driver.o(i.UartBleSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartBleSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>UartMbsSendData</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_driver.o(i.UartMbsSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_timeout_process
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PhysicalSendBuff
</UL>

<P><STRONG><a name="[72]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ymodem.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
</UL>

<P><STRONG><a name="[80]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[81]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[82]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[33]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
</UL>

<P><STRONG><a name="[32]"></a>flash_erase</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_driver.o(i.flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_erase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
</UL>

<P><STRONG><a name="[5f]"></a>flash_program_bytes</STRONG> (Thumb, 80 bytes, Stack size 152 bytes, bsp_driver.o(i.flash_program_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
</UL>

<P><STRONG><a name="[2f]"></a>flash_write_halfword</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_driver.o(i.flash_write_halfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_write_halfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
</UL>

<P><STRONG><a name="[60]"></a>gpio_init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, bsp_driver.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>jumpToApplication</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_driver.o(i.jumpToApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jumpToApplication
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
</UL>

<P><STRONG><a name="[1c]"></a>main</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = main &rArr; system_run &rArr; Task2_uart_rs485 &rArr; IapPacketCheck &rArr; ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchDog_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_run
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBleSendData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MbsFlashDataSyn
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[45]"></a>mb_crc16</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, modbus_crc.o(i.mb_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mb_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>

<P><STRONG><a name="[59]"></a>millis</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.millis))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_period_process
</UL>

<P><STRONG><a name="[6a]"></a>system_run</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app.o(i.system_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = system_run &rArr; Task2_uart_rs485 &rArr; IapPacketCheck &rArr; ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_period_process
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_rs485
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>uart_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_driver.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>watchDog_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_driver.o(i.watchDog_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = watchDog_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>ymodem_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ymodem.o(i.ymodem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ymodem_init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapCheck
</UL>

<P><STRONG><a name="[38]"></a>ymodem_packet_analysis</STRONG> (Thumb, 588 bytes, Stack size 24 bytes, ymodem.o(i.ymodem_packet_analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YmodemCRC
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_bytes
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[54]"></a>SetSysClock</STRONG> (Thumb, 322 bytes, Stack size 12 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2e]"></a>IapCheck</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, main.o(i.IapCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IapCheck &rArr; flash_write_halfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jumpToApplication
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>IapPacketCheck</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app.o(i.IapPacketCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = IapPacketCheck &rArr; ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jumpToApplication
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_halfword
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_rs485
</UL>

<P><STRONG><a name="[39]"></a>LedCtrl</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app.o(i.LedCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LedCtrl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_period_process
</UL>

<P><STRONG><a name="[37]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_timeout_process
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysMonitor
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
</UL>

<P><STRONG><a name="[51]"></a>SysMonitor</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app.o(i.SysMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysMonitor
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_period_process
</UL>

<P><STRONG><a name="[55]"></a>Task2_uart_rs485</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, app.o(i.Task2_uart_rs485))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = Task2_uart_rs485 &rArr; IapPacketCheck &rArr; ymodem_packet_analysis &rArr; flash_program_bytes &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IapPacketCheck
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_run
</UL>

<P><STRONG><a name="[57]"></a>Task3_period_process</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, app.o(i.Task3_period_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Task3_period_process &rArr; LedCtrl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_timeout_process
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysMonitor
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrl
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_run
</UL>

<P><STRONG><a name="[58]"></a>Ymodem_timeout_process</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app.o(i.Ymodem_timeout_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Ymodem_timeout_process &rArr; UartMbsSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartMbsSendData
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_period_process
</UL>

<P><STRONG><a name="[5b]"></a>UpdateCRC16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ymodem.o(i.UpdateCRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdateCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YmodemCRC
</UL>

<P><STRONG><a name="[5a]"></a>YmodemCRC</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ymodem.o(i.YmodemCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = YmodemCRC &rArr; UpdateCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
